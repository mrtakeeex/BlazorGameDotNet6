@page "/army"

@inject IUnitService UnitService
@inject IToastService ToasterService
@inject IJSRuntime JsRuntime

@attribute [Authorize]

<h3>Army</h3>

@if (UnitService.Units.Count > 0)
{
    @if (UnitService.MyUnits.Count > 0)
    {

    
        <table class="table">
            @foreach (var userUnit in UnitService.MyUnits)
            {
                <div class="army-list">
                    <div>
                        @switch (userUnit.UnitId)
                        {
                            case (int)UnitTypeEnum.Knight:
                                <img src="icons/W_Sword006.png" />
                                break;
                            case (int)UnitTypeEnum.Archer:
                                <img src="icons/S_Bow08.png" />
                                break;
                            case (int)UnitTypeEnum.Mage:
                                <img src="icons/C_Hat01.png" />
                                break;
                        }
                    </div>
                    <div>
                        @UnitService.Units.Single(unit => unit.Id == userUnit.UnitId).Title
                    </div>
                    <div>
                        @userUnit.HitPoints HP
                    </div>
                    <div>
                        <div class="form-group">
                            <img src="icons/coins.png" /> 
                            <span title="Value"> @userUnit.CurrentValue coins </span>
                        </div>
                    </div>
                    <div>
                        @if (userUnit.HitPoints <= 0)
                        {
                            <span title="Delete unit" class="oi oi-trash" style="color: red" @onclick="(() => DeleteUnit(userUnit.Id))"></span>
                        }
                        else
                        {
                            <span title="Sell unit" class="oi oi-dollar" style="color: green" @onclick="(() => DeleteUnit(userUnit.Id))"></span>
                        }
                    </div>
                </div>
            }
        </table>
        @if (UnitService.MyUnits.Any(u => u.HitPoints <= 0))
        {
            <center>
                <button class="btn btn-warning" @onclick="ReviveArmy">Revive your dead units!</button>
            </center>
        }
    }
    else
    {
        <p>You have no army yet. Let's build one on the <a href="build">Build page!</a></p>
    }
}
else
{
    <span>Loading Units...</span>
}
@code {
    protected override async Task OnInitializedAsync()
    {
        await UnitService.LoadUnitsAsync();
        await UnitService.LoadUserUnitsAsync();
    }

    private async Task ReviveArmy()
    {
        await UnitService.ReviveArmy();
    }

    private async Task DeleteUnit(int userUnitId)
    {
        await UnitService.DeleteUnit(userUnitId);   

        //if (await JsRuntime.InvokeAsync<bool>("Confirm", "Are you sure?"))
        //{
            
        //}
    }
}
