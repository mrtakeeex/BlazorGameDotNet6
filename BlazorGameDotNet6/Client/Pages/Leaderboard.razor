@page "/leaderboard"

@inject ILeaderboardService LeaderboardService
@inject IBattleService BattleService
@inject ICoinService CoinService
@inject IToastService ToastService

@inject AuthenticationStateProvider AuthStateProvider
@inject NavigationManager NavigationManager

<h3>Leaderboard</h3>

@if(LeaderboardService.Leaderboard == null)
{
    <span>Loading Leaderboard...</span>
}
else
{
    <table class="table">
        <thead>
            <tr>
                <th>#</th>
                <th>User</th>
                <th>Victories</th>
                <th>Defeats</th>
                <th>Battles</th>
                <th>Action</th>
            </tr>
        </thead>
        <tbody>
            @foreach(var entry in LeaderboardService.Leaderboard)
            {
                <tr style="@GetMyStyle(entry.UserId)">
                    <td>@entry.Rank</td>
                    <td>@entry.Username</td>
                    <td>@entry.Victories</td>
                    <td>@entry.Defeats</td>
                    <td>@entry.Battles</td>
                    <td>
                        @if (entry.UserId != myUserId) // I don't want to fight with myself :)
                        {
                            <button class="btn btn-primary" @onclick="@(() => StartBattle(entry.UserId))">Fight</button>
                        }
                    </td>   
                </tr>
            }
        </tbody>
    </table>
}

@code {
    int myUserId;

    protected override async Task OnInitializedAsync()
    {
        await LeaderboardService.GetLeaderboard();

        var authState = await AuthStateProvider.GetAuthenticationStateAsync();
        myUserId = int.Parse(authState.User.FindFirst(System.Security.Claims.ClaimTypes.NameIdentifier).Value);
    }

    public string GetMyStyle(int userId)
    {
        return userId == myUserId ? Constants.History.WinningStyle : string.Empty;
    }

    public async Task StartBattle(int opponentId)
    {
        //Console.WriteLine($"StartBattle with {opponentId}.");
        var result = await BattleService.StartBattle(opponentId);
        if (result.RoundsFought <= 0)
        {
            ToastService.ShowInfo(Constants.Leaderboard.NoBattleMsg);
        }
        else if (result.IsVictory)
        {
            ToastService.ShowSuccess(Constants.Leaderboard.WinningMsg);
        }
        else
        {
            ToastService.ShowWarning(Constants.Leaderboard.LosingMsg);
        }

        await LeaderboardService.GetLeaderboard();
        await CoinService.GetCoins();

        if (result.RoundsFought > 0)
        {
            NavigationManager.NavigateTo("battlelog");
        }
    }
}
