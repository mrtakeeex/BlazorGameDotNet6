@using BlazorGameDotNet6.Client.Services
@inject ICoinService CoinService;
@implements IDisposable

<!--only show this content to authorized users-->
<AuthorizeView>
    
    <Authorized>
        <div class="top-menu">
            <div class="form-group">
                <img src="icons/coins.png" /> 
                <span title="Coins"><b> @CoinService.Coins </b></span>
            </div>
        </div>
    </Authorized>
    
    <NotAuthorized>
        <div>
            <NavLink href="">Login</NavLink> | 
            <NavLink href="register">Register</NavLink>
        </div>
    </NotAuthorized>

</AuthorizeView>

@code {
    // Onchange invokes, when Coins count changed.
    // Therefore we need to subscribe to that event and call StateHasChanged, which will re-render the count on the UI
    protected override void OnInitialized() => CoinService.OnChange += StateHasChanged; 

    public void Dispose() => CoinService.OnChange -= StateHasChanged;
}
